const wineClassesMap = new Map([
  ["Red Wine", "1"],
  ["White Wine", "2"],
  ["Sparkling Wine", "3"],
  ["Dessert Wine", "4"],
  ["Fortified Wine", "5"],
  ["Flavored/Fruit Wines", "6"],
  ["Mead", "7"],
]);

const sourceSheetId = "1wrL_tY76yQX_lSys7QGA8blQ85v84UwK0cJN2rVjLYA";
const roundTwoThreshold = 410;
const numRanks = 15;

function generateForms() {
  var sourceSheet = SpreadsheetApp.openById(sourceSheetId);
  var data = sourceSheet.getSheetByName("R1Out").getDataRange().getValues();
  var header = data.shift();

  const allWines = [];

  if (data.length <= 0) {
    throw new Error("No data found. Confirm source sheet ID");
  }

  const categoryIndex = 0;
  const displayIdIndex = 1;
  const scoreIndex = 2;

  for (var i = 0; i < data.length; i++) {
    const row = data[i];

    const displayId = row[displayIdIndex];
    const category = row[categoryIndex];
    const score = row[scoreIndex];

    if (
      typeof displayId === "number" &&
      typeof category === "number" &&
      typeof score === "number"
    ) {
      allWines.push({ displayId, category, score });
    }
  }

  wineClassesMap.forEach((wineClassCode, className) => {
    const filteredWines = allWines.filter((wine) => {
      return (
        wine.category.toString().charAt(0) === wineClassCode &&
        wine.score >= roundTwoThreshold
      );
    });

    if (filteredWines.length > 0) {
      const timestamp = new Date().toLocaleString();
      const resultsSheetTitle = `Stampede Cellar Round 2 Results - ${className} - ${timestamp}`;
      const resultsSheet = SpreadsheetApp.create(resultsSheetTitle);

      const form = FormApp.create(`Round 2 - ${className} - ${timestamp}`);
      const formItems = [];

      form.setAllowResponseEdits(true);
      form.setRequireLogin(false);
      form.setLimitOneResponsePerUser(true);

      const nameInput = form.addTextItem();

      nameInput.setTitle("Name");
      nameInput.setRequired(true);

      const sectionHeader = form.addSectionHeaderItem();

      sectionHeader.setTitle(
        `Select your top ${numRanks} entrants - ${className}`
      );

      for (let i = 0; i < numRanks; i++) {
        const item = form.addListItem();
        item.setTitle(`Rank ${i + 1}`);
        item.setRequired(true);

        formItems.push(item);
      }

      let choices = new Set();

      filteredWines
        .sort((a, b) => a.displayId - b.displayId)
        .map((wine) => choices.add(wine.displayId));

      formItems.map((item) => item.setChoiceValues(Array.from(choices)));

      form.setDestination(
        FormApp.DestinationType.SPREADSHEET,
        resultsSheet.getId()
      );
    }
  });
}
